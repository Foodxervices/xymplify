- content_for :menu_left do 
  = render 'food_items/search', food_item_filter: @food_item_filter, url: [@restaurant, :food_items]
#food_items-index-container
  .row.vertical-align
    .col-xs-6
      h1 Food Item
    .col-xs-6
      .text-right
        .btn-group
          - if can?(:import, Kitchen)
            = link_to 'Import', new_food_item_import_url, remote: true, class: 'btn btn-default'
          - if can?(:create, FoodItem)
            = link_to 'Create New Food Item', [:new, @restaurant, :food_item], class: 'btn btn-default'

  .table-responsive
    table.table.table-striped.text-center
      thead
        tr 
          th = sortable(:code)
          th.text-left = sortable(:name)
          th = FoodItem.human_attribute_name(:image)
          th = sortable(:unit)
          th = sortable(:unit_price_cents)
          th = sortable(:unit_price_currency)
          th = sortable(:supplier_name)
          th = sortable(:kitchen_name)
          th = sortable(:brand)
          th Action
      tbody 
        - @food_items.each do |food_item|
          tr 
            td = link_to food_item.code, food_item, remote: true
            td.text-left = food_item.name
            td = image_tag food_item.image.url(:thumb)
            td = food_item.unit
            td = humanized_money_with_symbol(food_item.unit_price)
            td = food_item.unit_price_currency
            td = link_to_if can?(:read, food_item.supplier), food_item.supplier_name, supplier_path(food_item.supplier_id), remote: true
            td = chicken_link(food_item.kitchen)
            td = food_item.brand
            td
              ul.actions
                li = link_to_if can?(:update, food_item), 'Edit', [:edit, food_item]
                li = link_to_if can?(:destroy, food_item), 'Delete', '#', data: { toggle: "confirmation", href: food_item_path(food_item) }, class: 'delete'
  .text-center          
    = will_paginate @food_items, renderer: BootstrapPagination::Rails
  