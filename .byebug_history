exit
supplier_name
 supplier_id
exit
name.scan( /[0-9]([A-Za-z]*) x/).last.first
name.scan( /[0-9]([A-Za-z]*) x/)
name.scan( /[0-9]([A-Za-z]*) x/).first
name.scan( /<([^>]*)>/).first
name.scan( /<([^>]*)>/).last.first
name
exit
@success
exit
next
step
break
next
imported_food_items.map(&:valid?).all?
next
food_items
next
Hash[[header, spreadsheet.row(i)].transpose]
spreadsheet.row(i)
exit
spreadsheet.first
exit
spreadsheet.first
food_item_attributes
spreadsheet.first.size
spreadsheet.first
spreadsheet.row(2)
spreadsheet.row(1)
spreadsheet.options
spreadsheet
exit
locals
render_path
exit
params.require(:food_item_import).permit(:file)
params
exit
params
exit
title
exit
title
exit
FoodItemImport.new
exit
food_items
name
exit
Supplier.order("RANDOM()").first 
FoodItem.create({ code: 'PT90331', name: 'Pasta', unit: 'pack', unit_price: 28.00,  supplier_id: Supplier.order("RANDOM()").first }).errors
FoodItem.create({ code: 'PT90331', name: 'Pasta', unit: 'pack', unit_price: 28.00,  supplier_id: Supplier.order("RANDOM()").first })
FoodItem.all
exit
    7:   ])
    6:     { code: 'EL20920', name: 'Pasta', unit: 'pack', unit_price: 20.00,  supplier_id: Supplier.order("RANDOM()").first }
    5:     { code: 'PT90331', name: 'Pasta', unit: 'pack', unit_price: 28.00,  supplier_id: Supplier.order("RANDOM()").first },
FoodItem.create([
Supplier.order("RANDOM()").first
exit
Supplier.order("RANDOM()").first
Supplier.all
Supplier.create(name: 'aaa')
Supplier.order("RANDOM()").first
